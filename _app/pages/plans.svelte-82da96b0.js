import{Z as S,S as T,i as C,s as M,e as g,c as E,a as k,d as _,b as d,g as b,k as D,t as z,m as I,h as Q,J as v,P as X,O as Z,l as L,X as B,Y as K,K as x,v as R}from"../chunks/vendor-80ca69e6.js";import{u as U,k as V,s as P}from"../chunks/constants-e490e4d1.js";import{b as N}from"../chunks/paths-4b3c6e7e.js";function O(n,s,t){const a=n.slice();return a[11]=s[t],a}function q(n){let s,t=n[2],a=[];for(let l=0;l<t.length;l+=1)a[l]=A(O(n,t,l));return{c(){s=g("div");for(let l=0;l<a.length;l+=1)a[l].c();this.h()},l(l){s=E(l,"DIV",{class:!0});var i=k(s);for(let e=0;e<a.length;e+=1)a[e].l(i);i.forEach(_),this.h()},h(){d(s,"class","controls svelte-1ve7sum")},m(l,i){b(l,s,i);for(let e=0;e<a.length;e+=1)a[e].m(s,null)},p(l,i){if(i&6){t=l[2];let e;for(e=0;e<t.length;e+=1){const p=O(l,t,e);a[e]?a[e].p(p,i):(a[e]=A(p),a[e].c(),a[e].m(s,null))}for(;e<a.length;e+=1)a[e].d(1);a.length=t.length}},d(l){l&&_(s),Z(a,l)}}}function A(n){let s,t,a,l=V(n[11])+"",i,e,p,c;return{c(){s=g("label"),t=g("input"),a=D(),i=z(l),e=D(),this.h()},l(o){s=E(o,"LABEL",{class:!0});var r=k(s);t=E(r,"INPUT",{type:!0,name:!0}),a=I(r),i=Q(r,l),e=I(r),r.forEach(_),this.h()},h(){d(t,"type","radio"),d(t,"name","plans"),t.__value=n[11],t.value=t.__value,n[8][0].push(t),d(s,"class","svelte-1ve7sum")},m(o,r){b(o,s,r),v(s,t),t.checked=t.__value===n[1],v(s,a),v(s,i),v(s,e),p||(c=X(t,"change",n[7]),p=!0)},p(o,r){r&2&&(t.checked=t.__value===o[1])},d(o){o&&_(s),n[8][0].splice(n[8][0].indexOf(t),1),p=!1,c()}}}function W(n){let s,t,a,l,i,e,p,c=n[0]&&q(n);return{c(){s=g("link"),t=g("script"),l=D(),i=g("div"),e=D(),c&&c.c(),p=L(),this.h()},l(o){const r=B('[data-svelte="svelte-1p75gtx"]',document.head);s=E(r,"LINK",{href:!0,rel:!0}),t=E(r,"SCRIPT",{src:!0});var y=k(t);y.forEach(_),r.forEach(_),l=I(o),i=E(o,"DIV",{id:!0,class:!0}),k(i).forEach(_),e=I(o),c&&c.l(o),p=L(),this.h()},h(){d(s,"href","https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.css"),d(s,"rel","stylesheet"),K(t.src,a="https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.js")||d(t,"src",a),d(i,"id","map"),d(i,"class","svelte-1ve7sum")},m(o,r){v(document.head,s),v(document.head,t),b(o,l,r),b(o,i,r),b(o,e,r),c&&c.m(o,r),b(o,p,r)},p(o,[r]){o[0]?c?c.p(o,r):(c=q(o),c.c(),c.m(p.parentNode,p)):c&&(c.d(1),c=null)},i:x,o:x,d(o){_(s),_(t),o&&_(l),o&&_(i),o&&_(e),c&&c.d(o),o&&_(p)}}}async function te({fetch:n}){const s=await n(`${N}/plans.topojson`),a=await(await n(`${N}/output_census_wgs84.topojson`)).json(),l=U(a.objects.census),i=S(a,l);return{props:{topoData:await s.json(),census:i}}}const w="pop20",H="pop";function Y(n,s,t){let{topoData:a,census:l,points:i}=s,e,p;const c=["assembly","assembly_letters","assembly_names","assembly_unity","senate","senate_letters","senate_names","senate_unity"],o={pop:[0,.1,.2,.4,.6],cvap:[0,.1,.2,.4,.6]};function r({properties:u}){if(!u.ALAND||u[`${w}_total`]<=10)return"rgba(0, 0, 0, 0)";const f=m=>u[`${w}_${m}`]/u[`${w}_total`],j=o[H];for(let m=1;m<j.length;m++)if(f("asian")<j[m])return P[m-1];return P[j.length-1]}R(()=>{mapboxgl.accessToken="pk.eyJ1IjoianNvbmthbyIsImEiOiJjanNvM2U4bXQwN2I3NDRydXQ3Z2kwbWQwIn0.JWAoBlcpDJwkzG-O5_r0ZA",t(6,e=new mapboxgl.Map({container:"map",style:"mapbox://styles/jsonkao/ckvnu5tpy6coj14uizvyf1wuf/draft",center:[-73.967,40.72],zoom:12})),e.on("load",async()=>{const u=e.getStyle().layers;e.addSource("census",{type:"geojson",data:l});const h=["match",["get","GEOID"]];l.features.forEach(f=>{h.push(f.properties.GEOID,r(f))}),h.push("rgba(0, 0, 0, 0)"),e.addLayer({id:"census",type:"fill",source:"census",paint:{"fill-color":h}},"parks"),console.log(u),c.forEach(f=>{const j=S(a,a.objects[f]);e.addSource(f,{type:"geojson",data:j}),e.addLayer({id:f+"_outline",type:"line",source:f,layout:{},paint:{"line-color":"#000","line-width":1}}),e.addLayer({id:f+"_fill",type:"fill",source:f,layout:{},paint:{"fill-color":"#000000","fill-opacity":0}}),e.on("click",f+"_fill",m=>{new mapboxgl.Popup().setLngLat(m.lngLat).setHTML(m.features[0].properties[f]).addTo(e)})}),t(0,p=!0)})});let y;const G=[[]];function J(){y=this.__value,t(1,y)}return n.$$set=u=>{"topoData"in u&&t(3,a=u.topoData),"census"in u&&t(4,l=u.census),"points"in u&&t(5,i=u.points)},n.$$.update=()=>{if(n.$$.dirty&67&&p&&c.forEach(u=>{const h=u===y?"visible":"none";e.setLayoutProperty(`${u}_outline`,"visibility",h),e.setLayoutProperty(`${u}_fill`,"visibility",h)}),n.$$.dirty&81&&p){const u=["match",["get","GEOID"]];l.features.forEach(h=>{u.push(h.properties.GEOID,r(h))}),u.push("rgba(0, 0, 0, 0)"),e.setPaintProperty("census","fill-color",u)}},[p,y,c,a,l,i,e,J,G]}class se extends T{constructor(s){super();C(this,s,Y,W,M,{topoData:3,census:4,points:5})}}export{se as default,te as load};
