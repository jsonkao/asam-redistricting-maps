var b=Object.defineProperty,m=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var N=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var h=(t,e,o)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,y=(t,e)=>{for(var o in e||(e={}))N.call(e,o)&&h(t,o,e[o]);if(f)for(var o of f(e))P.call(e,o)&&h(t,o,e[o]);return t},d=(t,e)=>m(t,w(e));const v=(t,e=1)=>Math.round(t*Math.pow(10,e+2))/Math.pow(10,e)+"%",D=t=>Object.values(t.properties)[0],C=t=>"$"+Math.round(t/1e3)+"k",a=t=>t.charAt(0).toUpperCase()+t.slice(1),O=t=>!isNaN(t)&&t!==null,k=t=>t.properties.GEOID,x=(t,e)=>t&&!e||e&&!t,A=t=>`${Math.abs(t)} ${t<0?"below":"above"}`,E=t=>{const[e,o]=t.split(","),s=e.split("_");return(s.length===1?"":`\u201C${a(s[1])}\u201D `)+a(s[0])+" "+o},F=t=>{const e=t.split("_");return(e.length===1?"Current ":`\u201C${a(e[1])}\u201D `)+a(e[0])};function G(t){const e=t.geometries,o=e[0].properties.fields;for(let s=0;s<e.length;s++){const i={};e[s].properties=e[s].properties.d.split(",");for(let n=0;n<o.length;n++){let r=e[s].properties[n];r===""?r=null:!isNaN(+r)&&o[n]!=="GEOID"&&(r=+r),i[o[n]]=r}e[s].properties=i}return t}function I(t){let e,o;t.type==="Feature"?(e=t.geometry,o=t):["MultiPolygon","Polygon","MultiLineString"].includes(t.type)&&(e=t);const s=e.type==="MultiPolygon"?e.coordinates:[e.coordinates];for(let n=0;n<s.length;n++){const r=s[n];for(let l=0;l<r.length;l++){const u=r[l];for(let c=0;c<u.length;c++){const g=u[c];for(let p=0;p<g.length;p++){const M=g[p];s[n][l][c][p]=+M.toFixed(1)}}}}const i={type:e.type,coordinates:e.type==="MultiPolygon"?s:s[0]};return o?d(y({},o),{geometry:i}):i}export{D,v as a,O as b,a as c,A as d,F as e,k as i,C as m,E as p,I as r,G as u,x};
